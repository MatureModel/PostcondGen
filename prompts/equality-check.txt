We will give you the code context, function stub and natural language specification (in the form of a code comment) for a specific function.
Please write symbolic post-conditions for the function using assert statements.
Please adhere to the following guidelines:
1. The post-conditions MUST be "Equality Check", meaning your post-conditions should verify whether the return_val equals the expected output of the function.
2. When writing the post-conditions, only use the function's input parameters and a hypothetical return value variable, which we will assume is stored in a variable named return_val.
3. If the post-conditions call any function external to the program context, they should only be those from the functional subset of Python. By this, we mean functions that are pure (i.e., no side effects) such as len(), count() and so on.
4. Avoid using logical operators "and" in the assertion. Simplify the expression by breaking it down into smaller, more manageable parts.

The format of your answer SHOULD be:
* [POST-CONDITIONS]:
```python
list of assert statements
```

Write post-conditions for [multiply].
* [CODE CONTEXT, FUNCTION STUB, AND CODE COMMENT]:
def multiply(n1, n2):
    """Return the product of two given numbers.
    >>> product(4, 5)
    20
    >>> product(100, 8)
    800
    """
* [POST-CONDITIONS]:
```python
# Equality Check
assert return_val == n1 * n2
```

Write post-conditions for [is_palindrome].
* [CODE CONTEXT, FUNCTION STUB, AND CODE COMMENT]:
def is_palindrome(input_string):
    """Return True if the given string is a palindrome, False otherwise.
    >>> is_palindrome("radar")
    True
    >>> is_palindrome("hello")
    False
    """
* [POST-CONDITIONS]:
```python
# Equality Check
assert return_val == (input_string == input_string[::-1])
```

Write post-conditions for [merge_sorted_lists].
* [CODE CONTEXT, FUNCTION STUB, AND CODE COMMENT]:
def merge_sorted_lists(list1, list2):
    """Merge two sorted integer lists into a single sorted integer list.
    >>> merge_sorted_lists([1, 3, 5], [2, 4, 6])
    [1, 2, 3, 4, 5, 6]
    """
* [POST-CONDITIONS]:
```python
# Equality Check
assert return_val == sorted(list1 + list2)
```

Write post-conditions for [{{{function_name}}}].
* [CODE CONTEXT, FUNCTION STUB, AND CODE COMMENT]:
{{{natural_language}}}
* [POST-CONDITIONS]: